{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["NumberLine","className","Char","props","char","Array","fill","map","e","i","NumberContainer","str","c","App","useState","Date","toLocaleTimeString","setStr","sc","setSc","ref","useRef","useEffect","current","setInterval","date","clearInterval","id","placeholder","onInput","event","target","value","type","onClick","window","open","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAEA,SAASA,IACP,OAAO,qBAAKC,UAAU,mCAExB,SAASC,EAAKC,GACZ,IAAMC,EAAOD,EAAMC,KACnB,OAAIA,GAAQ,KAAOA,GAAQ,IAEvB,qBAAK,aAAYA,EAAMH,UAAU,4BAAjC,SACG,IAAII,MAAM,GAAGC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OACxB,cAACT,EAAD,GAAiBS,QAIL,MAATL,EAEP,qBAAKH,UAAU,0BAA0B,cAAaG,EAAtD,SACGA,IAIE,KAGX,SAASM,EAAgBP,GACvB,OACE,qBAAKF,UAAU,qBAAf,SACG,YAAIE,EAAMQ,KAAKJ,KAAI,SAACK,EAAGH,GAAJ,OAClB,cAACP,EAAD,CAAME,KAAMQ,GAAQH,QAgDbI,MA3Cf,WACE,MAAoBC,oBAAS,IAAIC,MAAOC,sBAAxC,mBAAKL,EAAL,KAAUM,EAAV,KACA,EAAkBH,mBAAS,IAA3B,mBAAKI,EAAL,KAASC,EAAT,KACMC,EAAMC,mBAoBZ,OAPAC,qBAAU,WAER,OADAF,EAAIG,QANGC,aAAY,WACjB,IAAIC,EAAO,IAAIV,KACfE,EAAOQ,EAAKT,wBACX,KAII,WACLU,cAAcN,EAAIG,aAKpB,sBAAKI,GAAG,MAAR,UACE,cAACjB,EAAD,CAAiBC,IAAKA,IACtB,sBAAKgB,GAAG,kBAAR,UACE,uBACEA,GAAG,gBACHC,YAAY,6CACZC,QA1BR,SAAqBC,GACnBX,EAAMW,EAAMC,OAAOC,QA0BbC,KAAK,SAEP,wBAAQC,QA1Bd,WACEC,OAAOC,KAAK,4CAA8ClB,IAyBvBS,GAAG,OAAlC,0BAEU,OAEZ,qBAAKA,GAAG,OAAR,mCC3DSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.19cd452f.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"../src/App.css\";\nfunction NumberLine() {\n  return <div className=\"number-line preserve translate\"></div>;\n}\nfunction Char(props) {\n  const char = props.char;\n  if (char >= \"0\" && char <= \"9\") {\n    return (\n      <div data-digit={char} className=\"number preserve translate\">\n        {new Array(7).fill(0).map((e, i) => (\n          <NumberLine key={i}></NumberLine>\n        ))}\n      </div>\n    );\n  } else if (char === \":\") {\n    return (\n      <div className=\"char preserve translate\" data-before={char}>\n        {char}\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\nfunction NumberContainer(props) {\n  return (\n    <div className=\"container preserve\">\n      {[...props.str].map((c, i) => (\n        <Char char={c} key={i}></Char>\n      ))}\n    </div>\n  );\n}\nfunction App() {\n  let [str, setStr] = useState(new Date().toLocaleTimeString());\n  let [sc, setSc] = useState(\"\");\n  const ref = useRef();\n  function handleInput(event) {\n    setSc(event.target.value);\n  }\n  function handleButton() {\n    window.open(\"https://cn.bing.com/search?form=ANNTH1&q=\" + sc);\n  }\n  function enter() {\n    return setInterval(() => {\n      let date = new Date();\n      setStr(date.toLocaleTimeString());\n    }, 997);\n  }\n  useEffect(() => {\n    ref.current = enter();\n    return () => {\n      clearInterval(ref.current);\n    };\n  });\n\n  return (\n    <div id=\"app\">\n      <NumberContainer str={str}></NumberContainer>\n      <div id=\"input-container\">\n        <input\n          id=\"content-input\"\n          placeholder=\"请输入搜索内容\"\n          onInput={handleInput}\n          type=\"text\"\n        />\n        <button onClick={handleButton} id=\"sbtn\">\n          搜索\n        </button>{\" \"}\n      </div>\n      <div id=\"foot\">\n        By GrayRabbit@HIT\n      </div>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}